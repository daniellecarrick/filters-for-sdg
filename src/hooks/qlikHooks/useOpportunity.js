// This function takes a data set in the following format generated by interests component
// 0: {Name: "String", Opportunity_gap: ##, ...more}
// and returns the top opportunities according to the max and the oportunity threshold

const useOpportunities = (data, threshold, max) => {
  const opportunitiesData = [];
  if (data) {
    data.forEach(row => {
      if (row.Opportunity_gap <= threshold) {
        opportunitiesData.push(row);
      }
    });
  }
  if (opportunitiesData.length > 0) {
    opportunitiesData.sort((a, b) => a.Opportunity_gap - b.Opportunity_gap);
    // add a comma between the terms (except the last one with gets an "and")
    const trimmedData = opportunitiesData.slice(0, max);
    const joinData = trimmedData
      .slice(0, trimmedData.length - 1)
      .map(row => row.Name);
    if (trimmedData.length > 1) {
      const lastData = trimmedData[trimmedData.length - 1].Name;
      const sentence = `${joinData.join(", ")} and ${lastData}`;
      return sentence;
    }
    return `${joinData.join(", ")}`;
  }
  return "";
};

export default useOpportunities;
